import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    PrefUtils().setThemeData(_newTheme);
    Get.forceAppUpdate();
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      colorScheme: colorScheme,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: Color(0XFFFFFFFF),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(
              28,
            ),
          ),
          shadowColor: appTheme.indigoA1004c,
          elevation: 10,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: appTheme.whiteA700,
          shape: RoundedRectangleBorder(
            side: BorderSide(
              color: appTheme.black900,
              width: 1,
            ),
            borderRadius: BorderRadius.circular(
              22,
            ),
          ),
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: Color(0XFFFFFFFF),
      ),
      textTheme: TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.gray80005,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        labelMedium: TextStyle(
          color: appTheme.deepOrangeA20006,
          fontSize: getFontSize(
            10,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        bodyLarge: TextStyle(
          color: appTheme.blueGray800,
          fontSize: getFontSize(
            17,
          ),
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w400,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray70004,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        labelLarge: TextStyle(
          color: appTheme.deepOrangeA20006,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: appTheme.gray90001,
          fontSize: getFontSize(
            32,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        headlineMedium: TextStyle(
          color: appTheme.gray800,
          fontSize: getFontSize(
            26,
          ),
          fontFamily: 'Radley',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray90002,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        labelSmall: TextStyle(
          color: appTheme.blueGray70001,
          fontSize: getFontSize(
            8,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        headlineSmall: TextStyle(
          color: appTheme.gray90003,
          fontSize: getFontSize(
            24,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray80005,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray90001,
          fontSize: getFontSize(
            20,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        displaySmall: TextStyle(
          color: appTheme.deepOrangeA20006,
          fontSize: getFontSize(
            35,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
      ),
      visualDensity: VisualDensity.standard,
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    background: Color(0XFF2E2A2A),
    error: Color(0X111D1617),
    errorContainer: Color(0XFF00746D),
    inversePrimary: Color(0XFF2E2A2A),
    inverseSurface: Color(0X111D1617),
    onBackground: Color(0XFFFFE9E1),
    onError: Color(0XFF9496A1),
    onErrorContainer: Color(0XFF141313),
    onInverseSurface: Color(0XFF9496A1),
    onPrimary: Color(0X111D1617),
    onPrimaryContainer: Color(0XFFFFE9E1),
    onSecondary: Color(0XFFFFE9E1),
    onSecondaryContainer: Color(0X111D1617),
    onSurface: Color(0XFFFFE9E1),
    onSurfaceVariant: Color(0X111D1617),
    onTertiary: Color(0XFFFFE9E1),
    onTertiaryContainer: Color(0X111D1617),
    outline: Color(0X111D1617),
    outlineVariant: Color(0XFF2E2A2A),
    primary: Color(0XFFFF7E67),
    primaryContainer: Color(0XFF2E2A2A),
    scrim: Color(0XFF2E2A2A),
    secondary: Color(0XFF2E2A2A),
    secondaryContainer: Color(0XFFFF7E67),
    shadow: Color(0X111D1617),
    surface: Color(0XFF2E2A2A),
    surfaceTint: Color(0X111D1617),
    surfaceVariant: Color(0XFFFF7E67),
    tertiary: Color(0XFF2E2A2A),
    tertiaryContainer: Color(0XFFFF7E67),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);
  // Blue
  Color get blue100 => Color(0XFFC0D8FB);
  Color get blue10001 => Color(0XFFB6CCFF);
  Color get blue50 => Color(0XFFEBF3FA);
  Color get blue5001 => Color(0XFFE3EAFF);
  Color get blueA400 => Color(0XFF1877F2);
  // BlueGray
  Color get blueGray100 => Color(0XFFD9D9D9);
  Color get blueGray10001 => Color(0XFFC8CDD1);
  Color get blueGray10002 => Color(0XFFCECECE);
  Color get blueGray300 => Color(0XFF8A8AB2);
  Color get blueGray400 => Color(0XFF898989);
  Color get blueGray40001 => Color(0XFF7F8A8E);
  Color get blueGray40002 => Color(0XFF888888);
  Color get blueGray50 => Color(0XFFF1F1F1);
  Color get blueGray5001 => Color(0XFFEBEFF2);
  Color get blueGray600 => Color(0XFF3C8F7C);
  Color get blueGray700 => Color(0XFF545252);
  Color get blueGray70001 => Color(0XFF4E5652);
  Color get blueGray800 => Color(0XFF354044);
  Color get blueGray900 => Color(0XFF3B2645);
  Color get blueGray90001 => Color(0XFF333333);
  // BlueGrayDd
  Color get blueGray400Dd => Color(0XDD888888);
  // BlueGrayc
  Color get blueGray9004c => Color(0X4C312D2D);
  // Cyan
  Color get cyan200 => Color(0XFF7FC9E7);
  Color get cyan400 => Color(0XFF1EC1C3);
  Color get cyan50 => Color(0XFFD6F7FF);
  Color get cyan5001 => Color(0XFFD1FEFF);
  Color get cyan5002 => Color(0XFFCDF3FF);
  Color get cyan5003 => Color(0XFFE5F7F9);
  Color get cyan900 => Color(0XFF006671);
  // DeepOrange
  Color get deepOrange200 => Color(0XFFF7A491);
  Color get deepOrange300 => Color(0XFFFD785A);
  Color get deepOrange600 => Color(0XFFEB5C31);
  Color get deepOrangeA100 => Color(0XFFF8AB74);
  Color get deepOrangeA200 => Color(0XFFF46735);
  Color get deepOrangeA20001 => Color(0XFFF56737);
  Color get deepOrangeA20002 => Color(0XFFF46837);
  Color get deepOrangeA20003 => Color(0XFFF46532);
  Color get deepOrangeA20004 => Color(0XFFF56938);
  Color get deepOrangeA20005 => Color(0XFFF46635);
  Color get deepOrangeA20006 => Color(0XFFF36430);
  // DeepOrangef
  Color get deepOrange503f => Color(0X3FFFE4E4);
  // DeepPurple
  Color get deepPurple50 => Color(0XFFE9E5F6);
  Color get deepPurple5001 => Color(0XFFECEAFF);
  Color get deepPurpleA100 => Color(0XFFC58BF2);
  // Gray
  Color get gray100 => Color(0XFFF6F6F6);
  Color get gray10001 => Color(0XFFF1F6FF);
  Color get gray10002 => Color(0XFFF5F5F5);
  Color get gray10003 => Color(0XFFF2F2F2);
  Color get gray200 => Color(0XFFEEEEEE);
  Color get gray20001 => Color(0XFFE8E8E8);
  Color get gray300 => Color(0XFFDDD9DA);
  Color get gray30001 => Color(0XFFDADADA);
  Color get gray30002 => Color(0XFFE1DFDF);
  Color get gray30003 => Color(0XFFDDDDDD);
  Color get gray400 => Color(0XFFC8C8C8);
  Color get gray40001 => Color(0XFFC3BDBD);
  Color get gray40002 => Color(0XFFC4C4C4);
  Color get gray50 => Color(0XFFF7F8F8);
  Color get gray500 => Color(0XFFACADAD);
  Color get gray50001 => Color(0XFF9597A1);
  Color get gray50002 => Color(0XFF979797);
  Color get gray50003 => Color(0XFFADAEAD);
  Color get gray50004 => Color(0XFFA1A1A1);
  Color get gray50005 => Color(0XFFACA3A5);
  Color get gray5001 => Color(0XFFFAFAFA);
  Color get gray600 => Color(0XFF726F6F);
  Color get gray60001 => Color(0XFF6E6E6E);
  Color get gray60002 => Color(0XFF7E7E7E);
  Color get gray60003 => Color(0XFF6F6F6F);
  Color get gray60004 => Color(0XFF7C7C7C);
  Color get gray60005 => Color(0XFF7B6F72);
  Color get gray700 => Color(0XFF696969);
  Color get gray70001 => Color(0XFF575757);
  Color get gray70002 => Color(0XFF706767);
  Color get gray70003 => Color(0XFF5A5454);
  Color get gray70004 => Color(0XFF666666);
  Color get gray70005 => Color(0XFF676767);
  Color get gray800 => Color(0XFF5D4646);
  Color get gray80001 => Color(0XFF443632);
  Color get gray80002 => Color(0XFF594F4C);
  Color get gray80003 => Color(0XFF484242);
  Color get gray80004 => Color(0XFF5E4646);
  Color get gray80005 => Color(0XFF4B232D);
  Color get gray80006 => Color(0XFF4E4A4A);
  Color get gray900 => Color(0XFF1E1919);
  Color get gray90001 => Color(0XFF25262D);
  Color get gray90002 => Color(0XFF1D1517);
  Color get gray90003 => Color(0XFF212121);
  // GrayDd
  Color get gray500Dd => Color(0XDD919191);
  // Grayc
  Color get gray9004c => Color(0X4C1F1F1F);
  // Green
  Color get green300 => Color(0XFF7CC69F);
  Color get green500 => Color(0XFF41D641);
  Color get greenA100 => Color(0XFFC9F7DF);
  // Indigo
  Color get indigo100 => Color(0XFFC6CEDD);
  Color get indigo200 => Color(0XFFA8AEDF);
  Color get indigo400 => Color(0XFF5B67CA);
  Color get indigo50 => Color(0XFFE8E9F3);
  Color get indigo5001 => Color(0XFFE0E3F9);
  Color get indigo700 => Color(0XFF355389);
  Color get indigo800 => Color(0XFF2B478B);
  Color get indigo900 => Color(0XFF121355);
  Color get indigo90001 => Color(0XFF10275A);
  Color get indigoA100 => Color(0XFF92A3FD);
  Color get indigoA10001 => Color(0XFF8F81FE);
  Color get indigoA10002 => Color(0XFF858FE9);
  // IndigoAc
  Color get indigoA1004c => Color(0X4C95ADFE);
  // LightBlue
  Color get lightBlue50 => Color(0XFFE6F9FF);
  // LightGreen
  Color get lightGreen700 => Color(0XFF74A32D);
  // Orange
  Color get orange200 => Color(0XFFF7CC7F);
  Color get orangeA200 => Color(0XFFFFB93E);
  // Pink
  Color get pink100 => Color(0XFFE4B6B4);
  Color get pink50 => Color(0XFFF7DCEA);
  Color get pink900 => Color(0XFF77182F);
  Color get pinkA100 => Color(0XFFF57C96);
  // Red
  Color get red100 => Color(0XFFFDD7CA);
  Color get red10001 => Color(0XFFFFDCD1);
  Color get red200 => Color(0XFFF0A48E);
  Color get red300 => Color(0XFFEB7F7F);
  Color get red30001 => Color(0XFFFD6E74);
  Color get red30002 => Color(0XFFE77D7D);
  Color get red400 => Color(0XFFEB5569);
  Color get red50 => Color(0XFFFFE9ED);
  Color get red500 => Color(0XFFFC2F2F);
  Color get red5001 => Color(0XFFFFEFEB);
  Color get red600 => Color(0XFFEA2727);
  // Redf
  Color get red1007f => Color(0X7FFFD6C8);
  // Teal
  Color get teal300 => Color(0XFF4FB6B2);
  Color get teal800 => Color(0XFF048C44);
  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
  Color get whiteA70001 => Color(0XFFFEFFFF);
  // Yellow
  Color get yellow700 => Color(0XFFF2BD27);
  Color get yellow800 => Color(0XFFEDAC29);
  Color get yellow900 => Color(0XFFF1852D);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
